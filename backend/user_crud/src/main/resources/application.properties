spring.application.name=user_crud


jwt.secret=usercrudapplicationsecretkey1234567890123456


#db configuration

spring.datasource.url= jdbc:mysql://localhost:3306/databaseName?createDatabaseIfNotExist=true
spring.datasource.username=****
spring.datasource.password=****
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
spring.mvc.pathmatch.matching-strategy=ant-path-matcher

#security configuration
spring.security.user.name=admin
spring.security.user.password=admin123

#oauth2 for github
spring.security.oauth2.client.registration.github.client-id=provide your github client id
spring.security.oauth2.client.registration.github.client-secret=provide your github client secret
spring.security.oauth2.client.registration.github.redirect-uri=http://localhost:8080/login/oauth2/code/github

#oauth2 for google
spring.security.oauth2.client.registration.google.client-id=provide your google client id
spring.security.oauth2.client.registration.google.client-secret=provide your google client secret
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=openid,email,profile

server.forward-headers-strategy=framework



# mail configuration

#manage your google account-->security-->2 step verification should on--->
#in search type for app passwords--->provide app name and create passwords

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=provide your email
spring.mail.password=provide your email app  password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


    

